[1/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[2/12] Performing build step for 'bootloader'
[1/1] cd /home/ismail/esp32-ble-ecg/esp32-c6/build/bootloader/esp-idf/esptool_py && /home/ismail/.espressif/python_env/idf5.1_py3.12_env/bin/python /home/ismail/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/ismail/esp32-ble-ecg/esp32-c6/build/bootloader/bootloader.bin
Bootloader binary size 0x5060 bytes. 0x2fa0 bytes (37%) free.
[3/12] No install step for 'bootloader'
[4/12] Completed 'bootloader'
[5/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/12] Linking C static library esp-idf/main/libmain.a
[7/12] Generating ld/sections.ld
[8/12] Building C object CMakeFiles/esp32-c6.elf.dir/project_elf_src_esp32c6.c.obj
[9/12] Linking CXX executable esp32-c6.elf
[10/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32c6 image...
Merged 1 ELF section
Successfully created esp32c6 image.
Generated /home/ismail/esp32-ble-ecg/esp32-c6/build/esp32-c6.bin
[11/12] cd /home/ismail/esp32-ble-ecg/esp32-c6/build/esp-idf/esptool_py && /home/ismail/.espressif/python_env/idf5.1_py3.12_env/bin/python /home/ismail/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ismail/esp32-ble-ecg/esp32-c6/build/partition_table/partition-table.bin /home/ismail/esp32-ble-ecg/esp32-c6/build/esp32-c6.bin
esp32-c6.bin binary size 0x22940 bytes. Smallest app partition is 0x100000 bytes. 0xdd6c0 bytes (86%) free.
[11/12] cd /home/ismail/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/ismail/esp/esp-idf -D "SERIAL_TOOL=/home/ismail/.espressif/python_env/idf5.1_py3.12_env/bin/python;;/home/ismail/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c6" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/ismail/esp32-ble-ecg/esp32-c6/build -P /home/ismail/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c6 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 esp32-c6.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-C6FH4 (QFN32) (revision v0.1)
Features: WiFi 6, BT 5, IEEE802.15.4
Crystal is 40MHz
MAC: f0:f5:bd:ff:fe:2c:1e:64
BASE MAC: f0:f5:bd:2c:1e:64
MAC_EXT: ff:fe
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00032fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 20576 bytes to 12867...
Writing at 0x00000000... (100 %)
Wrote 20576 bytes (12867 compressed) at 0x00000000 in 0.4 seconds (effective 455.0 kbit/s)...
Hash of data verified.
Compressed 141632 bytes to 72787...
Writing at 0x00010000... (20 %)
Writing at 0x00019ac8... (40 %)
Writing at 0x000210ee... (60 %)
Writing at 0x000281b4... (80 %)
Writing at 0x0002f066... (100 %)
Wrote 141632 bytes (72787 compressed) at 0x00010000 in 1.1 seconds (effective 997.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 581.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
